[{"/Users/mahadevanpv/Desktop/Interview360/src/index.js":"1","/Users/mahadevanpv/Desktop/Interview360/src/reportWebVitals.js":"2","/Users/mahadevanpv/Desktop/Interview360/src/App.js":"3","/Users/mahadevanpv/Desktop/Interview360/src/components/CollabInterSkills/CollabInterSkills.js":"4","/Users/mahadevanpv/Desktop/Interview360/src/components/TP/TechnicalProficiency.js":"5","/Users/mahadevanpv/Desktop/Interview360/src/components/ContinuousLearning/ContinuousLearning.js":"6","/Users/mahadevanpv/Desktop/Interview360/src/components/AdaptabilityandFlexibility/AdaptabilityandFlexibility.js":"7","/Users/mahadevanpv/Desktop/Interview360/src/components/LeadershipSkills/LeadershipSkills.js":"8","/Users/mahadevanpv/Desktop/Interview360/src/components/CommunicationSkills/CommunicationSkills.js":"9","/Users/mahadevanpv/Desktop/Interview360/src/components/ProblemSolvingSkills/ProblemSolvingSkills.js":"10"},{"size":535,"mtime":1690613859041,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1686936522727,"results":"13","hashOfConfig":"12"},{"size":5352,"mtime":1690619390745,"results":"14","hashOfConfig":"12"},{"size":3433,"mtime":1690615709193,"results":"15","hashOfConfig":"12"},{"size":3717,"mtime":1690623748615,"results":"16","hashOfConfig":"12"},{"size":3328,"mtime":1690615699493,"results":"17","hashOfConfig":"12"},{"size":3337,"mtime":1690615722553,"results":"18","hashOfConfig":"12"},{"size":3306,"mtime":1690615689121,"results":"19","hashOfConfig":"12"},{"size":3562,"mtime":1690615704054,"results":"20","hashOfConfig":"12"},{"size":3566,"mtime":1690615683138,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ihkm2e",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"/Users/mahadevanpv/Desktop/Interview360/src/index.js",[],[],"/Users/mahadevanpv/Desktop/Interview360/src/reportWebVitals.js",[],[],"/Users/mahadevanpv/Desktop/Interview360/src/App.js",["55"],[],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport CompanyLogo from './company-logo.png';\nimport CollabInterSkills from './components/CollabInterSkills/CollabInterSkills';\nimport './components/CollabInterSkills/CollabInterSkills.css';\nimport TechnicalProficiency from './components/TP/TechnicalProficiency';\nimport './components/TP/TechnicalProficiency.css';\nimport CommunicationSkills from './components/CommunicationSkills/CommunicationSkills';\nimport ContinuousLearning from './components/ContinuousLearning/ContinuousLearning';\nimport ProblemSolvingSkills from './components/ProblemSolvingSkills/ProblemSolvingSkills';\nimport AdaptabilityandFlexibility from './components/AdaptabilityandFlexibility/AdaptabilityandFlexibility';\nimport LeadershipSkills from './components/LeadershipSkills/LeadershipSkills';\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nconst App = () => {\n  const [designation, setDesignation] = useState('');\n  const [keywords, setKeywords] = useState('');\n  const [generatedQuestions, setGeneratedQuestions] = useState([]);\n\n\n  const skillsData = [\n    {\n      name: 'Technical Proficiency',\n      component: <TechnicalProficiency keywords={keywords} designation={designation} />,\n    },\n    {\n      name: 'Problem Solving Skills',\n      component: <ProblemSolvingSkills keywords={keywords} designation={designation} />,\n    },\n    {\n      name: 'Continuous Learning',\n      component: <ContinuousLearning keywords={keywords} designation={designation} />,\n    },\n    {\n      name: 'Communication Skills',\n      component: <CommunicationSkills keywords={keywords} designation={designation} />,\n    },\n    {\n      name: 'Collaboration & Interpersonal Skills',\n      component: <CollabInterSkills keywords={keywords} designation={designation} />,\n    },\n    {\n      name: 'Adaptability and Flexibility Skills',\n      component: <AdaptabilityandFlexibility keywords={keywords} designation={designation} />,\n    },\n    {\n      name: 'Leadership Skills',\n      component: <LeadershipSkills keywords={keywords} designation={designation} />,\n    },\n  ];\n\n  const handleDesignationChange = (event) => {\n    setDesignation(event.target.value);\n  };\n\n  const handleKeywordsChange = (event) => {\n    setKeywords(event.target.value);\n  };\n\n  const handleButtonClick = async () => {\n    if (isFormValid) {\n      try {\n        // Make a POST request to the API with the entered keywords and designation\n        const response = await axios.post('http://127.0.0.1:8000/download-resumes', {\n          username: 'mahadevan@accubits.com', // Replace with your LinkedIn username\n          password: 'Maha@1991', // Replace with your LinkedIn password\n          keywords: keywords,\n          designation: designation,\n          num_pages: 5, // Replace with the number of pages you want to search on LinkedIn\n        });\n\n        // Update the state with the generated questions\n        setGeneratedQuestions(response.data);\n        // Set showAnswerGenerator to true to display the generated questions\n      } catch (error) {\n        console.error('Failed to search LinkedIn:', error);\n      }\n    }\n  };\n\n  const handleSkillButtonClick = (skill) => {\n    // You can set some state or perform an action based on the clicked skill\n    // For example, you might want to show a component related to the selected skill\n    console.log(`Skill button clicked: ${skill}`);\n  };\n\n  const isFormValid = designation.trim() !== '' && keywords.trim() !== '';\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"logo-container\">\n          <img src={CompanyLogo} alt=\"Logo\" />\n        </div>\n        <p className=\"interview_logo\">Interview 360</p>\n      </header>\n\n      <div className=\"input-container\">\n        <div className=\"text-inputs\">\n          <label htmlFor=\"designation\">Designation:</label>\n          <input\n            type=\"text\"\n            id=\"designation\"\n            value={designation} required\n            onChange={handleDesignationChange}\n          />\n\n          <label htmlFor=\"keywords\">Keywords:</label>\n          <input\n            type=\"text\"\n            id=\"keywords\"\n            value={keywords} required\n            onChange={handleKeywordsChange}\n          />\n        </div>\n        <Button variant=\"primary\" className=\"search_linkedin\" onClick={handleButtonClick}>Search LinkedIn</Button>\n      </div>\n\n <Row xs={1} md={2} className=\"g-4\">\n      {skillsData.map((skill, idx) => (\n        <Col key={idx}>\n          <Card>\n            <Card.Body>\n              <Card.Text>\n                {skill.component}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n\n      {isFormValid && (\n        <div className=\"answer-container\">\n          <h2>Generated Questions:</h2>\n          <div className=\"question-list\">\n            {generatedQuestions.map((question, index) => (\n              <div key={index} className=\"question-item\">\n                <h3>Question {index + 1}</h3>\n                <p>{question}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","/Users/mahadevanpv/Desktop/Interview360/src/components/CollabInterSkills/CollabInterSkills.js",[],[],"/Users/mahadevanpv/Desktop/Interview360/src/components/TP/TechnicalProficiency.js",[],[],"/Users/mahadevanpv/Desktop/Interview360/src/components/ContinuousLearning/ContinuousLearning.js",[],[],"/Users/mahadevanpv/Desktop/Interview360/src/components/AdaptabilityandFlexibility/AdaptabilityandFlexibility.js",[],[],"/Users/mahadevanpv/Desktop/Interview360/src/components/LeadershipSkills/LeadershipSkills.js",["56"],[],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button } from 'react-bootstrap';\n\nconst LeadershipSkills = ({ keywords }) => {\n  const [leadershipSkillsQuestions, setLeadershipSkillsQuestions] = useState([]);\n  const [leadershipSkillsAnswers, setLeadershipSkillsAnswers] = useState([]);\n\n  const generateLeadershipSkillsQuestions = () => {\n    // Make the API request to generate questions\n    const apiUrl = '/v1/chat/completions';\n    const payload = {\n      model: 'bud-v0.2',\n      messages: [\n        {\n          role: 'user',\n          content: `Instruction: Generate 3 interview questions for Leadership Skills based on the following keywords: ${keywords}`,\n        },\n      ],\n    };\n\n    axios\n      .post(apiUrl, payload)\n      .then((response) => {\n        // Process the response and extract the questions\n        const generatedLeadershipSkillsQuestions = response.data.choices[0].message.content.split('\\n');\n        setLeadershipSkillsQuestions(generatedLeadershipSkillsQuestions);\n\n        // Generate probable answers for the questions\n//        generateProbableAnswers(generatedLeadershipSkillsQuestions);\n      })\n      .catch((error) => {\n        console.error('Error generating leadership skills questions:', error);\n      });\n  };\n\n//  const generateProbableAnswers = (questions) => {\n//    // Make the API request to generate answers for the questions\n//    const apiUrl = '/v1/chat/completions';\n//    const payload = {\n//      model: 'bud-v0.2',\n//      messages: questions.map((question) => ({\n//        role: 'user',\n//        content: `Roleplay as an interview candidate and provide a well-thought-out response to the following question: ${question}`,\n//      })),\n//    };\n//\n//    axios\n//      .post(apiUrl, payload)\n//      .then((response) => {\n//        // Process the response and extract the answers\n//        const generatedLeadershipSkillsAnswers = response.data.choices.map((choice) => choice.message.content);\n//        setLeadershipSkillsAnswers(generatedLeadershipSkillsAnswers);\n//      })\n//      .catch((error) => {\n//        console.error('Error generating probable answers:', error);\n//      });\n//  };\n\n  return (\n    <div className=\"response\">\n       <Button variant=\"primary\" onClick={generateLeadershipSkillsQuestions}>Generate Leadership Skills</Button>\n       <div className=\"questions-answers\">\n                    <ul style={{ textAlign: 'left' }}>\n                      {/* Render the questions using the adaptabilityFlexibilityQuestions state */}\n                      {leadershipSkillsQuestions.map((question, index) => (\n                        <React.Fragment key={index}>\n                          <li>{question}</li>\n                          {leadershipSkillsAnswers[index] && (\n                            <li>\n                              <strong>Answer: </strong>\n                              {leadershipSkillsAnswers[index].split('\\n').map((paragraph, index) => (\n                                <p key={index}>{paragraph}</p>\n                              ))}\n                            </li>\n                          )}\n                        </React.Fragment>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n  );\n};\n\nexport default LeadershipSkills;\n","/Users/mahadevanpv/Desktop/Interview360/src/components/CommunicationSkills/CommunicationSkills.js",[],[],"/Users/mahadevanpv/Desktop/Interview360/src/components/ProblemSolvingSkills/ProblemSolvingSkills.js",["57"],[],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button } from 'react-bootstrap';\n\nconst ProblemSolvingSkills = ({ keywords }) => {\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState([]);\n\n  const generateQuestions = () => {\n    // Make the API request to generate questions\n    const apiUrl = '/v1/chat/completions';\n    const payload = {\n      model: 'bud-v0.2',\n      messages: [\n        {\n          role: 'user',\n          content: `Instruction: Generate 3 interview questions for the following skill: Problem-Solving Skills. Evaluate the candidates ability to analyze and solve complex problems based on ${keywords}.`,\n        },\n      ],\n    };\n\n    axios\n      .post(apiUrl, payload)\n      .then((response) => {\n        // Process the response and extract the questions\n        const generatedQuestions = response.data.choices[0].message.content.split('\\n');\n        setQuestions(generatedQuestions);\n\n        // Generate probable answers for the questions\n//        generateProbableAnswers(generatedQuestions);\n      })\n      .catch((error) => {\n        console.error('Error generating questions:', error);\n      });\n  };\n\n//  const generateProbableAnswers = (questions) => {\n//    // Create an array to store the generated answers\n//    const generatedAnswers = [];\n//\n//    // Iterate through each question\n//    questions.forEach((question, index) => {\n//      // Make the API request to generate an answer for the question\n//      const apiUrl = '/v1/chat/completions';\n//      const payload = {\n//        model: 'bud-v0.2',\n//        messages: [\n//          {\n//            role: 'user',\n//            content: `Roleplay as an interview candidate and provide a well-thought-out response to the following question: ${question}`,\n//          },\n//        ],\n//      };\n//\n//      axios\n//        .post(apiUrl, payload)\n//        .then((response) => {\n//          // Process the response and extract the answer\n//          const generatedAnswer = response.data.choices[0].message.content;\n//\n//          // Add the answer to the generatedAnswers array at the corresponding index\n//          generatedAnswers[index] = generatedAnswer;\n//\n//          // Check if all answers have been generated\n//          if (generatedAnswers.length === questions.length) {\n//            // Set the answers state once all answers have been generated\n//            setAnswers(generatedAnswers);\n//          }\n//        })\n//        .catch((error) => {\n//          console.error('Error generating probable answer:', error);\n//        });\n//    });\n//  };\n\n\n  return (\n    <div className=\"response\">\n      <Button variant=\"primary\" onClick={generateQuestions}>Generate Problem-Solving Skills</Button>\n      <div className=\"questions-answers\">\n        <ul style={{ textAlign: 'left' }}>\n                  {/* Render the questions using the questions state */}\n                  {questions.map((question, index) => (\n                    <React.Fragment key={index}>\n                      <li>{question}</li>\n                      {answers[index] && (\n                        <li>\n                          <strong>Answer: </strong>\n                          {answers[index].split('\\n').map((paragraph, index) => (\n                            <p key={index}>{paragraph}</p>\n                          ))}\n                        </li>\n                      )}\n                    </React.Fragment>\n                  ))}\n                </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ProblemSolvingSkills;\n",{"ruleId":"58","severity":1,"message":"59","line":86,"column":9,"nodeType":"60","messageId":"61","endLine":86,"endColumn":31},{"ruleId":"58","severity":1,"message":"62","line":7,"column":35,"nodeType":"60","messageId":"61","endLine":7,"endColumn":61},{"ruleId":"58","severity":1,"message":"63","line":7,"column":19,"nodeType":"60","messageId":"61","endLine":7,"endColumn":29},"no-unused-vars","'handleSkillButtonClick' is assigned a value but never used.","Identifier","unusedVar","'setLeadershipSkillsAnswers' is assigned a value but never used.","'setAnswers' is assigned a value but never used."]