{"ast":null,"code":"var _jsxFileName = \"/Users/mahadevanpv/Public/Interview360/src/components/ContinuousLearning/ContinuousLearning.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContinuousLearning = _ref => {\n  _s();\n  let {\n    keywords\n  } = _ref;\n  const [continuousLearningQuestions, setContinuousLearningQuestions] = useState([]);\n  const generateContinuousLearningQuestions = () => {\n    // Make the API request to generate questions\n    const apiUrl = '/v1/chat/completions';\n    const payload = {\n      model: 'v0.2',\n      messages: [{\n        role: 'user',\n        content: `Instruction: Generate 3 interview questions for Continuous Learning Mindset based on the following keywords: ${keywords}`\n      }]\n    };\n    axios.post(apiUrl, payload).then(response => {\n      // Process the response and extract the questions\n      const generatedContinuousLearningQuestions = response.data.choices[0].message.content;\n      setContinuousLearningQuestions(generatedContinuousLearningQuestions);\n    }).catch(error => {\n      console.error('Error generating continuous learning questions:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"response\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Continuous Learning Mindset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateContinuousLearningQuestions,\n      children: \"Generate ContinuousLearning Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: continuousLearningQuestions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ContinuousLearning, \"jQtipP5y7D0h0sDYDcl/13FylKY=\");\n_c = ContinuousLearning;\nexport default ContinuousLearning;\nvar _c;\n$RefreshReg$(_c, \"ContinuousLearning\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ContinuousLearning","_ref","_s","keywords","continuousLearningQuestions","setContinuousLearningQuestions","generateContinuousLearningQuestions","apiUrl","payload","model","messages","role","content","post","then","response","generatedContinuousLearningQuestions","data","choices","message","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/mahadevanpv/Public/Interview360/src/components/ContinuousLearning/ContinuousLearning.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst ContinuousLearning = ({ keywords }) => {\n  const [continuousLearningQuestions, setContinuousLearningQuestions] = useState([]);\n\n  const generateContinuousLearningQuestions = () => {\n    // Make the API request to generate questions\n    const apiUrl = '/v1/chat/completions';\n    const payload = {\n      model: 'v0.2',\n      messages: [\n        {\n          role: 'user',\n          content: `Instruction: Generate 3 interview questions for Continuous Learning Mindset based on the following keywords: ${keywords}`,\n        },\n      ],\n    };\n\n    axios\n      .post(apiUrl, payload)\n      .then((response) => {\n        // Process the response and extract the questions\n        const generatedContinuousLearningQuestions = response.data.choices[0].message.content;\n        setContinuousLearningQuestions(generatedContinuousLearningQuestions);\n      })\n      .catch((error) => {\n        console.error('Error generating continuous learning questions:', error);\n      });\n  };\n\n  return (\n    <div className=\"response\">\n      <h3>Continuous Learning Mindset</h3>\n      <button onClick={generateContinuousLearningQuestions}>Generate ContinuousLearning Questions</button>\n      <ul>\n        {/* Render the questions using the continuousLearningQuestions state */}\n        {continuousLearningQuestions}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContinuousLearning;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,kBAAkB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACtC,MAAM,CAACG,2BAA2B,EAAEC,8BAA8B,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElF,MAAMU,mCAAmC,GAAGA,CAAA,KAAM;IAChD;IACA,MAAMC,MAAM,GAAG,sBAAsB;IACrC,MAAMC,OAAO,GAAG;MACdC,KAAK,EAAE,MAAM;MACbC,QAAQ,EAAE,CACR;QACEC,IAAI,EAAE,MAAM;QACZC,OAAO,EAAG,gHAA+GT,QAAS;MACpI,CAAC;IAEL,CAAC;IAEDN,KAAK,CACFgB,IAAI,CAACN,MAAM,EAAEC,OAAO,CAAC,CACrBM,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACA,MAAMC,oCAAoC,GAAGD,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACP,OAAO;MACrFP,8BAA8B,CAACW,oCAAoC,CAAC;IACtE,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;IACzE,CAAC,CAAC;EACN,CAAC;EAED,oBACEtB,OAAA;IAAKwB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBzB,OAAA;MAAAyB,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpC7B,OAAA;MAAQ8B,OAAO,EAAEvB,mCAAoC;MAAAkB,QAAA,EAAC;IAAqC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpG7B,OAAA;MAAAyB,QAAA,EAEGpB;IAA2B;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAtCIF,kBAAkB;AAAA8B,EAAA,GAAlB9B,kBAAkB;AAwCxB,eAAeA,kBAAkB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}